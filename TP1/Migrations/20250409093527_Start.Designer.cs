// <auto-generated />
using TP1.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace TP1.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250409093527_Start")]
    partial class Start
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Intervenant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Biographie")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Entreprise")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Intervenants");
                });

            modelBuilder.Entity("Notation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Commentaire")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Note")
                        .HasColumnType("integer");

                    b.Property<int>("ParticipantId")
                        .HasColumnType("integer");

                    b.Property<int>("SessionId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ParticipantId");

                    b.HasIndex("SessionId");

                    b.ToTable("Notations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Commentaire = "Super présentation",
                            Note = 5,
                            ParticipantId = 1,
                            SessionId = 1
                        },
                        new
                        {
                            Id = 2,
                            Commentaire = "Très intéressant",
                            Note = 4,
                            ParticipantId = 2,
                            SessionId = 2
                        },
                        new
                        {
                            Id = 3,
                            Commentaire = "Excellent contenu",
                            Note = 5,
                            ParticipantId = 3,
                            SessionId = 3
                        });
                });

            modelBuilder.Entity("SessionIntervenant", b =>
                {
                    b.Property<int>("SessionId")
                        .HasColumnType("integer");

                    b.Property<int>("IntervenantId")
                        .HasColumnType("integer");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("SessionId", "IntervenantId");

                    b.HasIndex("IntervenantId");

                    b.ToTable("SessionIntervenants");
                });

            modelBuilder.Entity("TP1.Models.Evenement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Categorie")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DateDebut")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DateFin")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("LieuId")
                        .HasColumnType("integer");

                    b.Property<string>("Statut")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LieuId");

                    b.ToTable("Evenements");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Categorie = "Tech",
                            DateDebut = "2025-09-04",
                            DateFin = "2025-09-04",
                            Description = "Conférence tech.",
                            LieuId = 1,
                            Statut = "Ouvert",
                            Titre = "Tech 2025"
                        },
                        new
                        {
                            Id = 2,
                            Categorie = "IA",
                            DateDebut = "2025-09-04",
                            DateFin = "2025-09-04",
                            Description = "Sommet sur l'IA.",
                            LieuId = 2,
                            Statut = "Complet",
                            Titre = "IA Summit"
                        },
                        new
                        {
                            Id = 3,
                            Categorie = "Blockchain",
                            DateDebut = "2025-09-04",
                            DateFin = "2025-09-04",
                            Description = "Événement blockchain.",
                            LieuId = 3,
                            Statut = "Ouvert",
                            Titre = "Web3 Days"
                        });
                });

            modelBuilder.Entity("TP1.Models.EvenementParticipant", b =>
                {
                    b.Property<int>("EvenementId")
                        .HasColumnType("integer");

                    b.Property<int>("ParticipantId")
                        .HasColumnType("integer");

                    b.Property<string>("DateInscription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StatutPresence")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("EvenementId", "ParticipantId");

                    b.HasIndex("ParticipantId");

                    b.ToTable("EvenementParticipants");

                    b.HasData(
                        new
                        {
                            EvenementId = 1,
                            ParticipantId = 1,
                            DateInscription = "2025-09-04",
                            StatutPresence = "Présente"
                        },
                        new
                        {
                            EvenementId = 1,
                            ParticipantId = 2,
                            DateInscription = "2025-09-04",
                            StatutPresence = "Présent"
                        },
                        new
                        {
                            EvenementId = 2,
                            ParticipantId = 3,
                            DateInscription = "2025-09-04",
                            StatutPresence = "Présente"
                        });
                });

            modelBuilder.Entity("TP1.Models.Lieu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Capacite")
                        .HasColumnType("integer");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Pays")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Lieux");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adresse = "123 Rue Principale",
                            Capacite = 500,
                            Nom = "Centre des Congrès",
                            Pays = "France",
                            Ville = "Lyon"
                        },
                        new
                        {
                            Id = 2,
                            Adresse = "456 Rue Expo",
                            Capacite = 800,
                            Nom = "Palais des Expos",
                            Pays = "France",
                            Ville = "Paris"
                        },
                        new
                        {
                            Id = 3,
                            Adresse = "789 Rue Sud",
                            Capacite = 300,
                            Nom = "Auditorium Sud",
                            Pays = "France",
                            Ville = "Marseille"
                        });
                });

            modelBuilder.Entity("TP1.Models.Participant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Entreprise")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Poste")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Participants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "alice@exemple.com",
                            Entreprise = "TechCorp",
                            Nom = "Durand",
                            Poste = "Dév",
                            Prenom = "Alice"
                        },
                        new
                        {
                            Id = 2,
                            Email = "bob@exemple.com",
                            Entreprise = "DataInc",
                            Nom = "Martin",
                            Poste = "Analyste",
                            Prenom = "Bob"
                        },
                        new
                        {
                            Id = 3,
                            Email = "claire@exemple.com",
                            Entreprise = "WebSolutions",
                            Nom = "Morel",
                            Poste = "Cheffe de projet",
                            Prenom = "Claire"
                        });
                });

            modelBuilder.Entity("TP1.Models.Salle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacite")
                        .HasColumnType("integer");

                    b.Property<int>("LieuId")
                        .HasColumnType("integer");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LieuId");

                    b.ToTable("Salles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacite = 100,
                            LieuId = 1,
                            Nom = "Salle A"
                        },
                        new
                        {
                            Id = 2,
                            Capacite = 150,
                            LieuId = 1,
                            Nom = "Salle B"
                        },
                        new
                        {
                            Id = 3,
                            Capacite = 200,
                            LieuId = 2,
                            Nom = "Salle C"
                        });
                });

            modelBuilder.Entity("TP1.Models.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EvenementId")
                        .HasColumnType("integer");

                    b.Property<string>("HeureDebut")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HeureFin")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SalleId")
                        .HasColumnType("integer");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EvenementId");

                    b.HasIndex("SalleId");

                    b.ToTable("Sessions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Bases de l'IA",
                            EvenementId = 1,
                            HeureDebut = "2025-09-04",
                            HeureFin = "2025-09-04",
                            SalleId = 1,
                            Titre = "Intro IA"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Fonctionnement",
                            EvenementId = 3,
                            HeureDebut = "2025-09-04",
                            HeureFin = "2025-09-04",
                            SalleId = 3,
                            Titre = "Blockchain"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Déploiement",
                            EvenementId = 2,
                            HeureDebut = "2025-09-04",
                            HeureFin = "2025-09-04",
                            SalleId = 2,
                            Titre = "Cloud Azure"
                        });
                });

            modelBuilder.Entity("Notation", b =>
                {
                    b.HasOne("TP1.Models.Participant", "Participant")
                        .WithMany("Notations")
                        .HasForeignKey("ParticipantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TP1.Models.Session", "Session")
                        .WithMany("Notations")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Participant");

                    b.Navigation("Session");
                });

            modelBuilder.Entity("SessionIntervenant", b =>
                {
                    b.HasOne("Intervenant", "Intervenant")
                        .WithMany("SessionIntervenants")
                        .HasForeignKey("IntervenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TP1.Models.Session", "Session")
                        .WithMany("SessionIntervenants")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Intervenant");

                    b.Navigation("Session");
                });

            modelBuilder.Entity("TP1.Models.Evenement", b =>
                {
                    b.HasOne("TP1.Models.Lieu", "Lieu")
                        .WithMany("Evenements")
                        .HasForeignKey("LieuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lieu");
                });

            modelBuilder.Entity("TP1.Models.EvenementParticipant", b =>
                {
                    b.HasOne("TP1.Models.Evenement", "Evenement")
                        .WithMany("EvenementParticipants")
                        .HasForeignKey("EvenementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TP1.Models.Participant", "Participant")
                        .WithMany("EvenementParticipants")
                        .HasForeignKey("ParticipantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evenement");

                    b.Navigation("Participant");
                });

            modelBuilder.Entity("TP1.Models.Salle", b =>
                {
                    b.HasOne("TP1.Models.Lieu", "Lieu")
                        .WithMany("Salles")
                        .HasForeignKey("LieuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lieu");
                });

            modelBuilder.Entity("TP1.Models.Session", b =>
                {
                    b.HasOne("TP1.Models.Evenement", "Evenement")
                        .WithMany("Sessions")
                        .HasForeignKey("EvenementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TP1.Models.Salle", "Salle")
                        .WithMany("Sessions")
                        .HasForeignKey("SalleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evenement");

                    b.Navigation("Salle");
                });

            modelBuilder.Entity("Intervenant", b =>
                {
                    b.Navigation("SessionIntervenants");
                });

            modelBuilder.Entity("TP1.Models.Evenement", b =>
                {
                    b.Navigation("EvenementParticipants");

                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("TP1.Models.Lieu", b =>
                {
                    b.Navigation("Evenements");

                    b.Navigation("Salles");
                });

            modelBuilder.Entity("TP1.Models.Participant", b =>
                {
                    b.Navigation("EvenementParticipants");

                    b.Navigation("Notations");
                });

            modelBuilder.Entity("TP1.Models.Salle", b =>
                {
                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("TP1.Models.Session", b =>
                {
                    b.Navigation("Notations");

                    b.Navigation("SessionIntervenants");
                });
#pragma warning restore 612, 618
        }
    }
}
